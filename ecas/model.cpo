// --------------------------------------------------------------------------
// IBM ILOG CP Optimizer model export file
// Effective workers: 8
// --------------------------------------------------------------------------

// ------ Interval-related variables: ---------------------------------------

"Task_0@0" = intervalVar(start=5..intervalmax, end=0..277, size=171);
"Task_0@1" = intervalVar(optional, size=171);
"Task_0@2" = intervalVar(optional, size=171);
"Task_1@5" = intervalVar(start=2..intervalmax, end=0..222, size=18);
"Task_1@6" = intervalVar(optional, size=18);
"Task_1@7" = intervalVar(optional, size=18);
"Task_2@10" = intervalVar(start=6..intervalmax, end=0..45, size=3);
"Task_2@11" = intervalVar(optional, size=3);
"Task_2@12" = intervalVar(optional, size=3);
"Task_3@15" = intervalVar(start=25..intervalmax, end=0..288, size=189);
"Task_3@16" = intervalVar(optional, size=189);
"Task_3@17" = intervalVar(optional, size=189);
"Task_4@20" = intervalVar(start=29..intervalmax, end=0..287, size=177);
"Task_4@21" = intervalVar(optional, size=177);
"Task_4@22" = intervalVar(optional, size=177);
"Task_5@25" = intervalVar(start=85..intervalmax, end=0..288, size=201);
"Task_5@26" = intervalVar(optional, size=201);
"Task_5@27" = intervalVar(optional, size=201);
"Task_6@30" = intervalVar(start=2..intervalmax, end=0..105, size=18);
"Task_6@31" = intervalVar(optional, size=18);
"Task_6@32" = intervalVar(optional, size=18);
"Task_7@35" = intervalVar(start=1..intervalmax, end=0..164, size=10);
"Task_7@36" = intervalVar(optional, size=10);
"Task_7@37" = intervalVar(optional, size=10);
"Task_8@40" = intervalVar(end=0..32, size=11);
"Task_8@41" = intervalVar(optional, size=11);
"Task_8@42" = intervalVar(optional, size=11);
"Task_9@45" = intervalVar(start=25..intervalmax, end=0..98, size=60);
"Task_9@46" = intervalVar(optional, size=60);
"Task_9@47" = intervalVar(optional, size=60);
"Task_10@50" = intervalVar(start=2..intervalmax, end=0..160, size=27);
"Task_10@51" = intervalVar(optional, size=27);
"Task_10@52" = intervalVar(optional, size=27);
"Task_11@55" = intervalVar(start=9..intervalmax, end=0..286, size=199);
"Task_11@56" = intervalVar(optional, size=199);
"Task_11@57" = intervalVar(optional, size=199);
"Task_12@60" = intervalVar(start=8..intervalmax, end=0..240, size=196);
"Task_12@61" = intervalVar(optional, size=196);
"Task_12@62" = intervalVar(optional, size=196);
"Task_13@65" = intervalVar(start=14..intervalmax, end=0..273, size=169);
"Task_13@66" = intervalVar(optional, size=169);
"Task_13@67" = intervalVar(optional, size=169);
"Task_14@70" = intervalVar(start=67..intervalmax, end=0..288, size=36);
"Task_14@71" = intervalVar(optional, size=36);
"Task_14@72" = intervalVar(optional, size=36);
"Task_15@75" = intervalVar(end=0..72, size=23);
"Task_15@76" = intervalVar(optional, size=23);
"Task_15@77" = intervalVar(optional, size=23);
"Task_16@80" = intervalVar(start=20..intervalmax, end=0..148, size=52);
"Task_16@81" = intervalVar(optional, size=52);
"Task_16@82" = intervalVar(optional, size=52);
"Task_17@85" = intervalVar(start=13..intervalmax, end=0..110, size=3);
"Task_17@86" = intervalVar(optional, size=3);
"Task_17@87" = intervalVar(optional, size=3);
"Task_18@90" = intervalVar(start=25..intervalmax, end=0..142, size=63);
"Task_18@91" = intervalVar(optional, size=63);
"Task_18@92" = intervalVar(optional, size=63);
"Task_19@95" = intervalVar(start=4..intervalmax, end=0..288, size=185);
"Task_19@96" = intervalVar(optional, size=185);
"Task_19@97" = intervalVar(optional, size=185);
"Task_20@100" = intervalVar(start=4..intervalmax, end=0..136, size=57);
"Task_20@101" = intervalVar(optional, size=57);
"Task_20@102" = intervalVar(optional, size=57);
"Task_21@105" = intervalVar(start=44..intervalmax, end=0..287, size=185);
"Task_21@106" = intervalVar(optional, size=185);
"Task_21@107" = intervalVar(optional, size=185);
"Task_22@110" = intervalVar(start=1..intervalmax, end=0..288, size=71);
"Task_22@111" = intervalVar(optional, size=71);
"Task_22@112" = intervalVar(optional, size=71);
"Task_23@115" = intervalVar(start=139..intervalmax, end=0..288, size=73);
"Task_23@116" = intervalVar(optional, size=73);
"Task_23@117" = intervalVar(optional, size=73);
"Task_24@120" = intervalVar(start=11..intervalmax, end=0..107, size=25);
"Task_24@121" = intervalVar(optional, size=25);
"Task_24@122" = intervalVar(optional, size=25);
Machine_state_ = stateFunction();
achine_state_ = stateFunction();

// ------ Expressions: ------------------------------------------------------

VarCumulAtom_182 = pulse("Task_0@1", 91);
VarCumulAtom_183 = pulse("Task_1@6", 51);
VarCumulAtom_184 = pulse("Task_2@11", 1689);
VarCumulAtom_185 = pulse("Task_3@16", 374);
VarCumulAtom_186 = pulse("Task_4@21", 639);
VarCumulAtom_187 = pulse("Task_5@26", 190);
VarCumulAtom_188 = pulse("Task_6@31", 1652);
VarCumulAtom_189 = pulse("Task_7@36", 1887);
VarCumulAtom_190 = pulse("Task_8@41", 303);
VarCumulAtom_191 = pulse("Task_9@46", 221);
VarCumulAtom_192 = pulse("Task_10@51", 168);
VarCumulAtom_193 = pulse("Task_11@56", 792);
VarCumulAtom_194 = pulse("Task_12@61", 1190);
VarCumulAtom_195 = pulse("Task_13@66", 73);
VarCumulAtom_196 = pulse("Task_14@71", 67);
VarCumulAtom_197 = pulse("Task_15@76", 611);
VarCumulAtom_198 = pulse("Task_16@81", 633);
VarCumulAtom_199 = pulse("Task_17@86", 55);
VarCumulAtom_200 = pulse("Task_18@91", 364);
VarCumulAtom_201 = pulse("Task_19@96", 1041);
VarCumulAtom_202 = pulse("Task_20@101", 1143);
VarCumulAtom_203 = pulse("Task_21@106", 233);
VarCumulAtom_204 = pulse("Task_22@111", 1037);
VarCumulAtom_205 = pulse("Task_23@116", 854);
VarCumulAtom_206 = pulse("Task_24@121", 137);
VarCumulAtom_211 = pulse("Task_0@1", 267);
VarCumulAtom_212 = pulse("Task_1@6", 10);
VarCumulAtom_213 = pulse("Task_2@11", 328);
VarCumulAtom_214 = pulse("Task_3@16", 1824);
VarCumulAtom_215 = pulse("Task_4@21", 113);
VarCumulAtom_216 = pulse("Task_5@26", 194);
VarCumulAtom_217 = pulse("Task_6@31", 302);
VarCumulAtom_218 = pulse("Task_7@36", 1636);
VarCumulAtom_219 = pulse("Task_8@41", 502);
VarCumulAtom_220 = pulse("Task_9@46", 237);
VarCumulAtom_221 = pulse("Task_10@51", 171);
VarCumulAtom_222 = pulse("Task_11@56", 1548);
VarCumulAtom_223 = pulse("Task_12@61", 171);
VarCumulAtom_224 = pulse("Task_13@66", 73);
VarCumulAtom_225 = pulse("Task_14@71", 68);
VarCumulAtom_226 = pulse("Task_15@76", 2004);
VarCumulAtom_227 = pulse("Task_16@81", 115);
VarCumulAtom_228 = pulse("Task_17@86", 12);
VarCumulAtom_229 = pulse("Task_18@91", 1608);
VarCumulAtom_230 = pulse("Task_19@96", 218);
VarCumulAtom_231 = pulse("Task_20@101", 220);
VarCumulAtom_232 = pulse("Task_21@106", 235);
VarCumulAtom_233 = pulse("Task_22@111", 170);
VarCumulAtom_234 = pulse("Task_23@116", 1573);
VarCumulAtom_235 = pulse("Task_24@121", 357);
VarCumulAtom_240 = pulse("Task_0@1", 317);
VarCumulAtom_241 = pulse("Task_1@6", 12);
VarCumulAtom_242 = pulse("Task_2@11", 310);
VarCumulAtom_243 = pulse("Task_3@16", 716);
VarCumulAtom_244 = pulse("Task_4@21", 107);
VarCumulAtom_245 = pulse("Task_5@26", 990);
VarCumulAtom_246 = pulse("Task_6@31", 287);
VarCumulAtom_247 = pulse("Task_7@36", 625);
VarCumulAtom_248 = pulse("Task_8@41", 1815);
VarCumulAtom_249 = pulse("Task_9@46", 1225);
VarCumulAtom_250 = pulse("Task_10@51", 1062);
VarCumulAtom_251 = pulse("Task_11@56", 385);
VarCumulAtom_252 = pulse("Task_12@61", 193);
VarCumulAtom_253 = pulse("Task_13@66", 327);
VarCumulAtom_254 = pulse("Task_14@71", 343);
VarCumulAtom_255 = pulse("Task_15@76", 1950);
VarCumulAtom_256 = pulse("Task_16@81", 113);
VarCumulAtom_257 = pulse("Task_17@86", 10);
VarCumulAtom_258 = pulse("Task_18@91", 649);
VarCumulAtom_259 = pulse("Task_19@96", 194);
VarCumulAtom_260 = pulse("Task_20@101", 197);
VarCumulAtom_261 = pulse("Task_21@106", 1265);
VarCumulAtom_262 = pulse("Task_22@111", 182);
VarCumulAtom_263 = pulse("Task_23@116", 414);
VarCumulAtom_264 = pulse("Task_24@121", 642);
VarCumulAtom_269 = pulse("Task_0@2", 91);
VarCumulAtom_270 = pulse("Task_1@7", 51);
VarCumulAtom_271 = pulse("Task_2@12", 1689);
VarCumulAtom_272 = pulse("Task_3@17", 374);
VarCumulAtom_273 = pulse("Task_4@22", 639);
VarCumulAtom_274 = pulse("Task_5@27", 190);
VarCumulAtom_275 = pulse("Task_6@32", 1652);
VarCumulAtom_276 = pulse("Task_7@37", 1887);
VarCumulAtom_277 = pulse("Task_8@42", 303);
VarCumulAtom_278 = pulse("Task_9@47", 221);
VarCumulAtom_279 = pulse("Task_10@52", 168);
VarCumulAtom_280 = pulse("Task_11@57", 792);
VarCumulAtom_281 = pulse("Task_12@62", 1190);
VarCumulAtom_282 = pulse("Task_13@67", 73);
VarCumulAtom_283 = pulse("Task_14@72", 67);
VarCumulAtom_284 = pulse("Task_15@77", 611);
VarCumulAtom_285 = pulse("Task_16@82", 633);
VarCumulAtom_286 = pulse("Task_17@87", 55);
VarCumulAtom_287 = pulse("Task_18@92", 364);
VarCumulAtom_288 = pulse("Task_19@97", 1041);
VarCumulAtom_289 = pulse("Task_20@102", 1143);
VarCumulAtom_290 = pulse("Task_21@107", 233);
VarCumulAtom_291 = pulse("Task_22@112", 1037);
VarCumulAtom_292 = pulse("Task_23@117", 854);
VarCumulAtom_293 = pulse("Task_24@122", 137);
VarCumulAtom_298 = pulse("Task_0@2", 267);
VarCumulAtom_299 = pulse("Task_1@7", 10);
VarCumulAtom_300 = pulse("Task_2@12", 328);
VarCumulAtom_301 = pulse("Task_3@17", 1824);
VarCumulAtom_302 = pulse("Task_4@22", 113);
VarCumulAtom_303 = pulse("Task_5@27", 194);
VarCumulAtom_304 = pulse("Task_6@32", 302);
VarCumulAtom_305 = pulse("Task_7@37", 1636);
VarCumulAtom_306 = pulse("Task_8@42", 502);
VarCumulAtom_307 = pulse("Task_9@47", 237);
VarCumulAtom_308 = pulse("Task_10@52", 171);
VarCumulAtom_309 = pulse("Task_11@57", 1548);
VarCumulAtom_310 = pulse("Task_12@62", 171);
VarCumulAtom_311 = pulse("Task_13@67", 73);
VarCumulAtom_312 = pulse("Task_14@72", 68);
VarCumulAtom_313 = pulse("Task_15@77", 2004);
VarCumulAtom_314 = pulse("Task_16@82", 115);
VarCumulAtom_315 = pulse("Task_17@87", 12);
VarCumulAtom_316 = pulse("Task_18@92", 1608);
VarCumulAtom_317 = pulse("Task_19@97", 218);
VarCumulAtom_318 = pulse("Task_20@102", 220);
VarCumulAtom_319 = pulse("Task_21@107", 235);
VarCumulAtom_320 = pulse("Task_22@112", 170);
VarCumulAtom_321 = pulse("Task_23@117", 1573);
VarCumulAtom_322 = pulse("Task_24@122", 357);
VarCumulAtom_327 = pulse("Task_0@2", 317);
VarCumulAtom_328 = pulse("Task_1@7", 12);
VarCumulAtom_329 = pulse("Task_2@12", 310);
VarCumulAtom_330 = pulse("Task_3@17", 716);
VarCumulAtom_331 = pulse("Task_4@22", 107);
VarCumulAtom_332 = pulse("Task_5@27", 990);
VarCumulAtom_333 = pulse("Task_6@32", 287);
VarCumulAtom_334 = pulse("Task_7@37", 625);
VarCumulAtom_335 = pulse("Task_8@42", 1815);
VarCumulAtom_336 = pulse("Task_9@47", 1225);
VarCumulAtom_337 = pulse("Task_10@52", 1062);
VarCumulAtom_338 = pulse("Task_11@57", 385);
VarCumulAtom_339 = pulse("Task_12@62", 193);
VarCumulAtom_340 = pulse("Task_13@67", 327);
VarCumulAtom_341 = pulse("Task_14@72", 343);
VarCumulAtom_342 = pulse("Task_15@77", 1950);
VarCumulAtom_343 = pulse("Task_16@82", 113);
VarCumulAtom_344 = pulse("Task_17@87", 10);
VarCumulAtom_345 = pulse("Task_18@92", 649);
VarCumulAtom_346 = pulse("Task_19@97", 194);
VarCumulAtom_347 = pulse("Task_20@102", 197);
VarCumulAtom_348 = pulse("Task_21@107", 1265);
VarCumulAtom_349 = pulse("Task_22@112", 182);
VarCumulAtom_350 = pulse("Task_23@117", 414);
VarCumulAtom_351 = pulse("Task_24@122", 642);

// ------ Objective: --------------------------------------------------------

minimize(sum([startEval("Task_0@0", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 9605.0696868896484 / 2, 9605.0696868896484 * endEval("Task_0@0", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_1@5", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 286.560001373291 / 2, 286.560001373291 * endEval("Task_1@5", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_2@10", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 1570.7100219726562 / 2, 1570.7100219726562 * endEval("Task_2@10", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_3@15", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 47576.969192504883 / 2, 47576.969192504883 * endEval("Task_3@15", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_4@20", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 34863.690216064453 / 2, 34863.690216064453 * endEval("Task_4@20", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_5@25", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 21764.279754638672 / 2, 21764.279754638672 * endEval("Task_5@25", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_6@30", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 9184.68017578125 / 2, 9184.68017578125 * endEval("Task_6@30", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_7@35", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 6754.7998046875 / 2, 6754.7998046875 * endEval("Task_7@35", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_8@40", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 2139.0600738525391 / 2, 2139.0600738525391 * endEval("Task_8@40", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_9@45", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 7781.9998168945312 / 2, 7781.9998168945312 * endEval("Task_9@45", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_10@50", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 2793.1499176025391 / 2, 2793.1499176025391 * endEval("Task_10@50", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_11@55", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 68093.818542480469 / 2, 68093.818542480469 * endEval("Task_11@55", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_12@60", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 71361.639282226562 / 2, 71361.639282226562 * endEval("Task_12@60", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_13@65", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 6640.0101547241211 / 2, 6640.0101547241211 * endEval("Task_13@65", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_14@70", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 1364.4000549316406 / 2, 1364.4000549316406 * endEval("Task_14@70", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_15@75", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 8806.69985961914 / 2, 8806.69985961914 * endEval("Task_15@75", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_16@80", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 10171.200317382812 / 2, 10171.200317382812 * endEval("Task_16@80", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_17@85", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 51.389997482299805 / 2, 51.389997482299805 * endEval("Task_17@85", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_18@90", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 14654.430038452148 / 2, 14654.430038452148 * endEval("Task_18@90", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_19@95", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 59904.849548339844 / 2, 59904.849548339844 * endEval("Task_19@95", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_20@100", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 20158.620208740234 / 2, 20158.620208740234 * endEval("Task_20@100", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_21@105", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 24923.200225830078 / 2, 24923.200225830078 * endEval("Task_21@105", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_22@110", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 22660.360260009766 / 2, 22660.360260009766 * endEval("Task_22@110", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_23@115", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 26493.889465332031 / 2, 26493.889465332031 * endEval("Task_23@115", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2, startEval("Task_24@120", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) * 2214.9999618530273 / 2, 2214.9999618530273 * endEval("Task_24@120", segmentedFunction((0, 0), (0, 0.048700001090765, 0), (6, 0.047929998487234116, 0), (18, 0.047520000487565994, 0), (30, 0.043999999761581421, 0), (36, 0.047520000487565994, 0), (48, 0.041019998490810394, 0), (54, 0.041000001132488251, 0), (60, 0.034609999507665634, 0), (72, 0.0313900001347065, 0), (78, 0.040640000253915787, 0), (84, 0.041009999811649323, 0), (90, 0.047759998589754105, 0), (102, 0.047740001231431961, 0), (108, 0.034779999405145645, 0), (114, 0.047759998589754105, 0), (120, 0.040640000253915787, 0), (132, 0.047740001231431961, 0), (138, 0.047759998589754105, 0), (186, 0.048700001090765, 0), (204, 0.049109999090433121, 0), (210, 0.27432999014854431, 0), (222, 0.050080001354217529, 0), (228, 0.049109999090433121, 0), (234, 0.048700001090765, 0), (264, 0.048179998993873596, 0), (270, 0.047759998589754105, 0), (276, 0.048700001090765, 0), (288, 0, 0))) / 2]));

// ------ Constraints: ------------------------------------------------------

alternative("Task_0@0", ["Task_0@1", "Task_0@2"]);
alternative("Task_1@5", ["Task_1@6", "Task_1@7"]);
alternative("Task_2@10", ["Task_2@11", "Task_2@12"]);
alternative("Task_3@15", ["Task_3@16", "Task_3@17"]);
alternative("Task_4@20", ["Task_4@21", "Task_4@22"]);
alternative("Task_5@25", ["Task_5@26", "Task_5@27"]);
alternative("Task_6@30", ["Task_6@31", "Task_6@32"]);
alternative("Task_7@35", ["Task_7@36", "Task_7@37"]);
alternative("Task_8@40", ["Task_8@41", "Task_8@42"]);
alternative("Task_9@45", ["Task_9@46", "Task_9@47"]);
alternative("Task_10@50", ["Task_10@51", "Task_10@52"]);
alternative("Task_11@55", ["Task_11@56", "Task_11@57"]);
alternative("Task_12@60", ["Task_12@61", "Task_12@62"]);
alternative("Task_13@65", ["Task_13@66", "Task_13@67"]);
alternative("Task_14@70", ["Task_14@71", "Task_14@72"]);
alternative("Task_15@75", ["Task_15@76", "Task_15@77"]);
alternative("Task_16@80", ["Task_16@81", "Task_16@82"]);
alternative("Task_17@85", ["Task_17@86", "Task_17@87"]);
alternative("Task_18@90", ["Task_18@91", "Task_18@92"]);
alternative("Task_19@95", ["Task_19@96", "Task_19@97"]);
alternative("Task_20@100", ["Task_20@101", "Task_20@102"]);
alternative("Task_21@105", ["Task_21@106", "Task_21@107"]);
alternative("Task_22@110", ["Task_22@111", "Task_22@112"]);
alternative("Task_23@115", ["Task_23@116", "Task_23@117"]);
alternative("Task_24@120", ["Task_24@121", "Task_24@122"]);
alwaysEqual(Machine_state_, 0, 0, 0, 1, 1);
alwaysEqual(Machine_state_, 288, 288, 0, 1, 1);
alwaysEqual(achine_state_, 0, 0, 0, 1, 1);
alwaysEqual(achine_state_, 288, 288, 0, 1, 1);
alwaysIn(Machine_state_, "Task_0@1", 1, 1);
alwaysIn(Machine_state_, "Task_1@6", 1, 1);
alwaysIn(Machine_state_, "Task_2@11", 1, 1);
alwaysIn(Machine_state_, "Task_3@16", 1, 1);
alwaysIn(Machine_state_, "Task_4@21", 1, 1);
alwaysIn(Machine_state_, "Task_5@26", 1, 1);
alwaysIn(Machine_state_, "Task_6@31", 1, 1);
alwaysIn(Machine_state_, "Task_7@36", 1, 1);
alwaysIn(Machine_state_, "Task_8@41", 1, 1);
alwaysIn(Machine_state_, "Task_9@46", 1, 1);
alwaysIn(Machine_state_, "Task_10@51", 1, 1);
alwaysIn(Machine_state_, "Task_11@56", 1, 1);
alwaysIn(Machine_state_, "Task_12@61", 1, 1);
alwaysIn(Machine_state_, "Task_13@66", 1, 1);
alwaysIn(Machine_state_, "Task_14@71", 1, 1);
alwaysIn(Machine_state_, "Task_15@76", 1, 1);
alwaysIn(Machine_state_, "Task_16@81", 1, 1);
alwaysIn(Machine_state_, "Task_17@86", 1, 1);
alwaysIn(Machine_state_, "Task_18@91", 1, 1);
alwaysIn(Machine_state_, "Task_19@96", 1, 1);
alwaysIn(Machine_state_, "Task_20@101", 1, 1);
alwaysIn(Machine_state_, "Task_21@106", 1, 1);
alwaysIn(Machine_state_, "Task_22@111", 1, 1);
alwaysIn(Machine_state_, "Task_23@116", 1, 1);
alwaysIn(Machine_state_, "Task_24@121", 1, 1);
alwaysIn(achine_state_, "Task_0@2", 1, 1);
alwaysIn(achine_state_, "Task_1@7", 1, 1);
alwaysIn(achine_state_, "Task_2@12", 1, 1);
alwaysIn(achine_state_, "Task_3@17", 1, 1);
alwaysIn(achine_state_, "Task_4@22", 1, 1);
alwaysIn(achine_state_, "Task_5@27", 1, 1);
alwaysIn(achine_state_, "Task_6@32", 1, 1);
alwaysIn(achine_state_, "Task_7@37", 1, 1);
alwaysIn(achine_state_, "Task_8@42", 1, 1);
alwaysIn(achine_state_, "Task_9@47", 1, 1);
alwaysIn(achine_state_, "Task_10@52", 1, 1);
alwaysIn(achine_state_, "Task_11@57", 1, 1);
alwaysIn(achine_state_, "Task_12@62", 1, 1);
alwaysIn(achine_state_, "Task_13@67", 1, 1);
alwaysIn(achine_state_, "Task_14@72", 1, 1);
alwaysIn(achine_state_, "Task_15@77", 1, 1);
alwaysIn(achine_state_, "Task_16@82", 1, 1);
alwaysIn(achine_state_, "Task_17@87", 1, 1);
alwaysIn(achine_state_, "Task_18@92", 1, 1);
alwaysIn(achine_state_, "Task_19@97", 1, 1);
alwaysIn(achine_state_, "Task_20@102", 1, 1);
alwaysIn(achine_state_, "Task_21@107", 1, 1);
alwaysIn(achine_state_, "Task_22@112", 1, 1);
alwaysIn(achine_state_, "Task_23@117", 1, 1);
alwaysIn(achine_state_, "Task_24@122", 1, 1);
2565 >= sum([pulse(intervalmin, intervalmax, 0), VarCumulAtom_182, VarCumulAtom_183, VarCumulAtom_184, VarCumulAtom_185, VarCumulAtom_186, VarCumulAtom_187, VarCumulAtom_188, VarCumulAtom_189, VarCumulAtom_190, VarCumulAtom_191, VarCumulAtom_192, VarCumulAtom_193, VarCumulAtom_194, VarCumulAtom_195, VarCumulAtom_196, VarCumulAtom_197, VarCumulAtom_198, VarCumulAtom_199, VarCumulAtom_200, VarCumulAtom_201, VarCumulAtom_202, VarCumulAtom_203, VarCumulAtom_204, VarCumulAtom_205, VarCumulAtom_206]);
2465 >= sum([pulse(intervalmin, intervalmax, 0), VarCumulAtom_211, VarCumulAtom_212, VarCumulAtom_213, VarCumulAtom_214, VarCumulAtom_215, VarCumulAtom_216, VarCumulAtom_217, VarCumulAtom_218, VarCumulAtom_219, VarCumulAtom_220, VarCumulAtom_221, VarCumulAtom_222, VarCumulAtom_223, VarCumulAtom_224, VarCumulAtom_225, VarCumulAtom_226, VarCumulAtom_227, VarCumulAtom_228, VarCumulAtom_229, VarCumulAtom_230, VarCumulAtom_231, VarCumulAtom_232, VarCumulAtom_233, VarCumulAtom_234, VarCumulAtom_235]);
2488 >= sum([pulse(intervalmin, intervalmax, 0), VarCumulAtom_240, VarCumulAtom_241, VarCumulAtom_242, VarCumulAtom_243, VarCumulAtom_244, VarCumulAtom_245, VarCumulAtom_246, VarCumulAtom_247, VarCumulAtom_248, VarCumulAtom_249, VarCumulAtom_250, VarCumulAtom_251, VarCumulAtom_252, VarCumulAtom_253, VarCumulAtom_254, VarCumulAtom_255, VarCumulAtom_256, VarCumulAtom_257, VarCumulAtom_258, VarCumulAtom_259, VarCumulAtom_260, VarCumulAtom_261, VarCumulAtom_262, VarCumulAtom_263, VarCumulAtom_264]);
2568 >= sum([pulse(intervalmin, intervalmax, 0), VarCumulAtom_269, VarCumulAtom_270, VarCumulAtom_271, VarCumulAtom_272, VarCumulAtom_273, VarCumulAtom_274, VarCumulAtom_275, VarCumulAtom_276, VarCumulAtom_277, VarCumulAtom_278, VarCumulAtom_279, VarCumulAtom_280, VarCumulAtom_281, VarCumulAtom_282, VarCumulAtom_283, VarCumulAtom_284, VarCumulAtom_285, VarCumulAtom_286, VarCumulAtom_287, VarCumulAtom_288, VarCumulAtom_289, VarCumulAtom_290, VarCumulAtom_291, VarCumulAtom_292, VarCumulAtom_293]);
2408 >= sum([pulse(intervalmin, intervalmax, 0), VarCumulAtom_298, VarCumulAtom_299, VarCumulAtom_300, VarCumulAtom_301, VarCumulAtom_302, VarCumulAtom_303, VarCumulAtom_304, VarCumulAtom_305, VarCumulAtom_306, VarCumulAtom_307, VarCumulAtom_308, VarCumulAtom_309, VarCumulAtom_310, VarCumulAtom_311, VarCumulAtom_312, VarCumulAtom_313, VarCumulAtom_314, VarCumulAtom_315, VarCumulAtom_316, VarCumulAtom_317, VarCumulAtom_318, VarCumulAtom_319, VarCumulAtom_320, VarCumulAtom_321, VarCumulAtom_322]);
2498 >= sum([pulse(intervalmin, intervalmax, 0), VarCumulAtom_327, VarCumulAtom_328, VarCumulAtom_329, VarCumulAtom_330, VarCumulAtom_331, VarCumulAtom_332, VarCumulAtom_333, VarCumulAtom_334, VarCumulAtom_335, VarCumulAtom_336, VarCumulAtom_337, VarCumulAtom_338, VarCumulAtom_339, VarCumulAtom_340, VarCumulAtom_341, VarCumulAtom_342, VarCumulAtom_343, VarCumulAtom_344, VarCumulAtom_345, VarCumulAtom_346, VarCumulAtom_347, VarCumulAtom_348, VarCumulAtom_349, VarCumulAtom_350, VarCumulAtom_351]);

